Para versão atual
=================
- Implementar validação de modelo (IModelValidator)
- Implementar IStorageQueryable
  > A idéia é que ele seja opcional
    - Para isso teremos uma implementação padrão, tipo StorageQueryableNotImplemented
    - Nos métodos de extensão haver um AddFeatureStorageQueryableNotImplemented()
    - Nos métodos de extensão do EntityFramework implementar um StorageQueryable
    - Um IStorageQueryable herda IStorage, portanto pode ser utilizado normalmente como um
      mas permite consultas que retornam IQueryable
  > Motivação: Em cenários onde seja preciso executar RawSQL por exemplo, é útil fazer
               a primeira consulta com SQL, mas aproveitar os conceitos dados pelo IStorage,
               como Filter, Limiter e Projection

Para versão 1.0
=================
- Remover necessidade de objetos de assinatura
  > IDataModuleSignature
  > IStorageSignature
- Repensar DataModule<>. Talvez usar a idéia de BusinessService e DataService?
  (ou StorageService, PersistenceService)
- Renomear Storage para Store?
- Implementar Data.Dapper
  > Implementar suporte a SQL puro
  > IDataFilter, Sorter, Get(), Find(), Search(), etc.
- Adicionar suporte a consultas com SQL puro mesmo no EntityFramework

Versões futuras
===============
- Implementar Data para cenário na nuvem
- Implementar Data para cenário em sistema de arquivos
